# Generated by Django 3.0.5 on 2020-04-26 02:10

import datetime
from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volume', models.DecimalField(decimal_places=2, max_digits=10)),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10)),
                ('source_financement', models.CharField(max_length=100)),
                ('duree', models.IntegerField()),
                ('ods', models.DateTimeField(blank=True, default=datetime.datetime.now)),
            ],
        ),
        migrations.CreateModel(
            name='Brigade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gid', models.IntegerField()),
                ('nom_foret', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=50)),
                ('lieu_dit', models.CharField(max_length=50)),
                ('commune', models.CharField(max_length=50)),
                ('usage', models.CharField(max_length=50)),
                ('etat', models.CharField(max_length=50)),
                ('occup', models.CharField(max_length=5)),
                ('access', models.CharField(max_length=5)),
                ('composi', models.CharField(max_length=50)),
                ('comodite', models.CharField(max_length=50)),
                ('dependance', models.CharField(max_length=50)),
                ('date_d_ame', models.CharField(max_length=50)),
                ('obs', models.CharField(max_length=150)),
                ('annee_cons', models.IntegerField()),
                ('surface', models.FloatField()),
                ('geom', django.contrib.gis.db.models.fields.MultiPointField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Canton',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, null=True, verbose_name='Canton')),
                ('layer', models.CharField(max_length=25, verbose_name='Foret Domaniale')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Cantons',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('layer', models.CharField(max_length=25)),
                ('shape_leng', models.FloatField()),
                ('shape_area', models.FloatField()),
                ('nature_jur', models.CharField(max_length=50)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Elevation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('rast', django.contrib.gis.db.models.fields.RasterField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Foret_recreative',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('layer', models.CharField(max_length=200)),
                ('kml_folder', models.CharField(max_length=200)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Forets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wilaya', models.IntegerField()),
                ('cod_de_poly', models.CharField(max_length=50, verbose_name='code de la forets')),
                ('comm', models.CharField(max_length=200, verbose_name='Commune')),
                ('foret', models.CharField(max_length=200, verbose_name='forets')),
                ('sup', models.IntegerField()),
                ('espece_d', models.CharField(max_length=200, verbose_name='Espece dominante')),
                ('espece_s', models.CharField(max_length=200, verbose_name='Espece secondaire')),
                ('obs', models.TextField()),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Limite_commune',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gid', models.IntegerField()),
                ('objectid_1', models.IntegerField()),
                ('objectid', models.IntegerField()),
                ('objectid_2', models.IntegerField()),
                ('nature', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=30)),
                ('autre_nom', models.CharField(max_length=30)),
                ('nom_wilaya', models.CharField(max_length=30)),
                ('wilaya', models.FloatField()),
                ('origine', models.CharField(max_length=30)),
                ('code', models.IntegerField()),
                ('shape_leng', models.FloatField()),
                ('shape_le_1', models.FloatField()),
                ('shape_le_2', models.FloatField()),
                ('shape_area', models.FloatField()),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Localites',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objectid', models.IntegerField()),
                ('code_du_pp', models.CharField(max_length=254)),
                ('annee', models.FloatField()),
                ('daira', models.CharField(max_length=254)),
                ('commune', models.CharField(max_length=254)),
                ('name', models.CharField(max_length=254)),
                ('type_de_pr', models.CharField(max_length=254)),
                ('nom_du_bas', models.CharField(max_length=254)),
                ('ville', models.FloatField()),
                ('ville_nom_field', models.CharField(max_length=254)),
                ('ville_id', models.FloatField()),
                ('ville_depa', models.FloatField()),
                ('ville_long', models.FloatField()),
                ('ville_lati', models.FloatField()),
                ('descriptio', models.CharField(max_length=254)),
                ('geom', django.contrib.gis.db.models.fields.MultiPointField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Maison_forestiere',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gid', models.IntegerField()),
                ('nom_foret', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=50)),
                ('lieu_dit', models.CharField(max_length=50)),
                ('commune', models.CharField(max_length=50)),
                ('sup', models.FloatField()),
                ('usage', models.CharField(max_length=50)),
                ('annee_cons', models.CharField(max_length=50)),
                ('etat', models.CharField(max_length=50)),
                ('occup', models.CharField(max_length=50)),
                ('access', models.CharField(max_length=5)),
                ('comp', models.CharField(max_length=50)),
                ('comodite', models.CharField(max_length=50)),
                ('dependance', models.CharField(max_length=50)),
                ('date_d_reh', models.CharField(max_length=50)),
                ('obs', models.CharField(max_length=150)),
                ('access_1', models.CharField(max_length=5)),
                ('geom', django.contrib.gis.db.models.fields.MultiPointField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='nomenclature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomenclature', models.CharField(max_length=144)),
            ],
        ),
        migrations.CreateModel(
            name='ObjectifGlobal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='ObjectifSpecifique',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('objectifglobal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projet.ObjectifGlobal')),
            ],
        ),
        migrations.CreateModel(
            name='OrientationGlobale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Orientations Globales',
            },
        ),
        migrations.CreateModel(
            name='Parcellaire_perimetre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objectid', models.IntegerField(null=True)),
                ('name', models.CharField(max_length=27, null=True)),
                ('layer', models.CharField(max_length=45, null=True)),
                ('kml_folder', models.CharField(max_length=28, null=True)),
                ('id_par', models.IntegerField(null=True)),
                ('ha', models.IntegerField(null=True)),
                ('a', models.IntegerField(null=True)),
                ('ca', models.IntegerField(null=True)),
                ('sup_ha', models.IntegerField(null=True)),
                ('obs', models.CharField(max_length=100, null=True)),
                ('shape_leng', models.FloatField(null=True)),
                ('shape_area', models.FloatField(null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Perimetre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objectid', models.IntegerField()),
                ('id_per', models.IntegerField()),
                ('nom', models.CharField(max_length=50)),
                ('date_arre', models.DateField()),
                ('ha', models.IntegerField(null=True)),
                ('a', models.IntegerField(null=True)),
                ('ca', models.IntegerField(null=True)),
                ('sup_ha', models.IntegerField(null=True)),
                ('obs', models.CharField(max_length=100, null=True)),
                ('shape_leng', models.FloatField(null=True)),
                ('shape_area', models.FloatField(null=True)),
                ('sup', models.FloatField(null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Piste',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gid', models.IntegerField()),
                ('long_piste', models.FloatField()),
                ('larg_piste', models.FloatField()),
                ('id1', models.FloatField()),
                ('nom_foret', models.CharField(max_length=50)),
                ('n_piste', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=50)),
                ('about', models.CharField(max_length=50)),
                ('nat_piste', models.CharField(max_length=50)),
                ('etat', models.CharField(max_length=50)),
                ('date_ouver', models.CharField(max_length=50)),
                ('amena_o_n', models.CharField(max_length=5)),
                ('date_amen', models.CharField(max_length=50)),
                ('obs', models.CharField(max_length=150)),
                ('geom', django.contrib.gis.db.models.fields.MultiLineStringField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Point_eau',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gid', models.IntegerField()),
                ('nom_foret', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=50)),
                ('capacite', models.CharField(max_length=50)),
                ('nature', models.CharField(max_length=50)),
                ('etat', models.CharField(max_length=50)),
                ('date_reali', models.CharField(max_length=50)),
                ('date_d_ame', models.CharField(max_length=50)),
                ('obs', models.CharField(max_length=150)),
                ('etat_1', models.CharField(max_length=50)),
                ('geom', django.contrib.gis.db.models.fields.MultiPointField(srid=4326)),
            ],
            options={
                'verbose_name_plural': "Points d'eau",
            },
        ),
        migrations.CreateModel(
            name='Projet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=255)),
                ('justification', models.TextField(null=True)),
                ('lieu_dit', models.CharField(max_length=200)),
                ('superficie_zone', models.IntegerField(null=True)),
                ('menage', models.IntegerField(null=True)),
                ('population', models.IntegerField(null=True)),
                ('duree', models.IntegerField(null=True)),
                ('annee', models.IntegerField(null=True)),
                ('deleted_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('commune', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='projet.Limite_commune')),
                ('objectifglobal', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='projet.ObjectifGlobal')),
                ('objectifspecifique', models.ManyToManyField(to='projet.ObjectifSpecifique')),
            ],
            options={
                'verbose_name_plural': 'Projets',
            },
        ),
        migrations.CreateModel(
            name='Reboisement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=31)),
                ('layer', models.CharField(max_length=30)),
                ('kml_folder', models.CharField(max_length=25)),
                ('id_reboi', models.IntegerField()),
                ('id_reboise', models.IntegerField()),
                ('notificati', models.CharField(max_length=254)),
                ('appel_offr', models.DateField(max_length=100, null=True)),
                ('date_attri', models.CharField(max_length=254, null=True)),
                ('entreprise', models.CharField(max_length=254, null=True)),
                ('duree', models.IntegerField(null=True)),
                ('nature_act', models.CharField(max_length=254, null=True)),
                ('objectif', models.CharField(max_length=254, null=True)),
                ('occupation', models.CharField(max_length=254, null=True)),
                ('antecedant', models.CharField(max_length=254, null=True)),
                ('lot', models.IntegerField(null=True)),
                ('n_marche', models.CharField(max_length=254, null=True)),
                ('date_march', models.DateField(null=True)),
                ('montant_ma', models.DecimalField(decimal_places=2, default=0, max_digits=10, null=True)),
                ('n_ods_depa', models.CharField(max_length=254, null=True)),
                ('date_ods_d', models.DateField(null=True)),
                ('n_ods_arre', models.IntegerField(null=True)),
                ('date_ods_a', models.DateField(null=True)),
                ('n_osd_repr', models.IntegerField(null=True)),
                ('date_osd_r', models.DateField(null=True)),
                ('nbr_jour_a', models.IntegerField(null=True)),
                ('delais_con', models.IntegerField(null=True)),
                ('date_expir', models.DateField(null=True)),
                ('lancement', models.CharField(max_length=254, null=True)),
                ('nbr_ouvrie', models.IntegerField(null=True)),
                ('daira', models.CharField(max_length=254, null=True)),
                ('district', models.CharField(max_length=254, null=True)),
                ('triage', models.CharField(max_length=254, null=True)),
                ('circonscri', models.CharField(max_length=254, null=True)),
                ('commune', models.CharField(max_length=254, null=True)),
                ('forets', models.CharField(max_length=254, null=True)),
                ('cantons', models.CharField(max_length=254, null=True)),
                ('volume_pre', models.IntegerField(null=True)),
                ('espece', models.CharField(max_length=254, null=True)),
                ('densite', models.IntegerField(null=True)),
                ('besoins_pl', models.CharField(max_length=254, null=True)),
                ('obs', models.CharField(max_length=254, null=True)),
                ('longeure_c', models.CharField(max_length=254, null=True)),
                ('pique', models.CharField(max_length=254, null=True)),
                ('date_lance', models.CharField(max_length=254, null=True)),
                ('nbr_ouvr_1', models.IntegerField(null=True)),
                ('ouverture_field', models.CharField(max_length=254, null=True)),
                ('plantation', models.CharField(max_length=254, null=True)),
                ('cloture_ml', models.IntegerField(null=True)),
                ('nbr_plants', models.CharField(max_length=254, null=True)),
                ('x', models.FloatField(null=True)),
                ('y', models.FloatField(null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
            options={
                'verbose_name_plural': 'Reboisements',
            },
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objectid', models.IntegerField()),
                ('nom', models.CharField(max_length=50)),
                ('ref', models.CharField(max_length=10)),
                ('type_route', models.CharField(max_length=50)),
                ('freq_route', models.CharField(max_length=50)),
                ('entretenue', models.CharField(max_length=50)),
                ('sens', models.CharField(max_length=50)),
                ('carossable', models.CharField(max_length=50)),
                ('shape_leng', models.FloatField()),
                ('geom', django.contrib.gis.db.models.fields.MultiLineStringField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Route1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.CharField(max_length=254)),
                ('highway', models.CharField(max_length=254)),
                ('name', models.CharField(max_length=254)),
                ('oneway', models.CharField(max_length=254)),
                ('ref', models.CharField(max_length=254)),
                ('ref_ar', models.CharField(max_length=254)),
                ('surface', models.CharField(max_length=254)),
                ('bridge', models.CharField(max_length=254)),
                ('layer', models.CharField(max_length=254)),
                ('maxspeed', models.CharField(max_length=254)),
                ('lanes', models.CharField(max_length=254)),
                ('junction', models.CharField(max_length=254)),
                ('hgv', models.CharField(max_length=254)),
                ('source', models.CharField(max_length=254)),
                ('name_ar', models.CharField(max_length=254)),
                ('note', models.CharField(max_length=254)),
                ('alt_name', models.CharField(max_length=254)),
                ('fixme', models.CharField(max_length=254)),
                ('loc_name', models.CharField(max_length=254)),
                ('tunnel', models.CharField(max_length=254)),
                ('access', models.CharField(max_length=254)),
                ('service', models.CharField(max_length=254)),
                ('bicycle', models.CharField(max_length=254)),
                ('foot', models.CharField(max_length=254)),
                ('maxheight', models.CharField(max_length=254)),
                ('footway', models.CharField(max_length=254)),
                ('embankment', models.CharField(max_length=254)),
                ('incline', models.CharField(max_length=254)),
                ('name_kab', models.CharField(max_length=254)),
                ('constructi', models.CharField(max_length=254)),
                ('motor_vehi', models.CharField(max_length=254)),
                ('smoothness', models.CharField(max_length=254)),
                ('ford', models.CharField(max_length=254)),
                ('crossing', models.CharField(max_length=254)),
                ('passing_pl', models.CharField(max_length=254)),
                ('bus', models.CharField(max_length=254)),
                ('public_tra', models.CharField(max_length=254)),
                ('name_en', models.CharField(max_length=254)),
                ('name_fr', models.CharField(max_length=254)),
                ('network', models.CharField(max_length=254)),
                ('bench', models.CharField(max_length=254)),
                ('covered', models.CharField(max_length=254)),
                ('shelter', models.CharField(max_length=254)),
                ('lamp_type', models.CharField(max_length=254)),
                ('internet_a', models.CharField(max_length=254)),
                ('geom', django.contrib.gis.db.models.fields.MultiLineStringField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Tpf',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gid', models.IntegerField()),
                ('tenant', models.CharField(max_length=50)),
                ('about', models.CharField(max_length=50)),
                ('nat_tpf', models.CharField(max_length=50)),
                ('long_tpf', models.FloatField()),
                ('larg_tpf', models.FloatField()),
                ('sup', models.FloatField()),
                ('etat', models.CharField(max_length=50)),
                ('date_ouver', models.CharField(max_length=50)),
                ('amena_o_n', models.CharField(max_length=5)),
                ('date_amen', models.CharField(max_length=50)),
                ('obs', models.CharField(max_length=150)),
                ('nom_foret', models.CharField(max_length=50)),
                ('km', models.CharField(max_length=10)),
                ('n_tpf_1', models.FloatField()),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='WorldBorder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('area', models.IntegerField()),
                ('pop2005', models.IntegerField(verbose_name='Population 2005')),
                ('fips', models.CharField(max_length=2, verbose_name='FIPS Code')),
                ('iso2', models.CharField(max_length=2, verbose_name='2 Digit ISO')),
                ('iso3', models.CharField(max_length=3, verbose_name='3 Digit ISO')),
                ('un', models.IntegerField(verbose_name='United Nations Code')),
                ('region', models.IntegerField(verbose_name='Region Code')),
                ('subregion', models.IntegerField(verbose_name='Sub-Region Code')),
                ('lon', models.FloatField()),
                ('lat', models.FloatField()),
                ('mpoly', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Resultat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('objectifspecifique', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projet.ObjectifSpecifique')),
            ],
            options={
                'verbose_name_plural': 'Résultats',
            },
        ),
        migrations.CreateModel(
            name='Reboisementphysique',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('n', models.IntegerField(null=True)),
                ('realisation_physique', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('date', models.DateField()),
                ('reboisement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projet.Reboisement')),
            ],
        ),
        migrations.CreateModel(
            name='Reboisementfinancier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('n', models.IntegerField(null=True)),
                ('paiement', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('datefinance', models.DateField()),
                ('reboisement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projet.Reboisement')),
            ],
        ),
        migrations.CreateModel(
            name='Projetspecifique',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objectifspecifique', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='projet.ObjectifSpecifique')),
                ('projet', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='projet.Projet')),
            ],
            options={
                'verbose_name_plural': 'projet objectif specifique',
            },
        ),
        migrations.CreateModel(
            name='Projetresultat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projetspecifique', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='projet.Projetspecifique')),
                ('resultat', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='projet.Resultat')),
            ],
            options={
                'verbose_name_plural': 'projet résultats',
            },
        ),
        migrations.AddField(
            model_name='projet',
            name='resultat',
            field=models.ManyToManyField(to='projet.Resultat'),
        ),
        migrations.AddField(
            model_name='projet',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='physique',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('realisation_physique', models.DecimalField(decimal_places=2, max_digits=5)),
                ('date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projet.Action')),
            ],
        ),
        migrations.CreateModel(
            name='OrientationStrategiques',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('orientationglobal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projet.OrientationGlobale')),
            ],
            options={
                'verbose_name_plural': 'Orientations Stratégiques',
            },
        ),
        migrations.AddField(
            model_name='objectifglobal',
            name='orientationstrategique',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projet.OrientationStrategiques'),
        ),
        migrations.CreateModel(
            name='IndicateurResultat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('resultat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projet.Resultat')),
            ],
        ),
        migrations.CreateModel(
            name='IndicateurObjectifSpecifique',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('resultat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projet.ObjectifSpecifique')),
            ],
            options={
                'verbose_name_plural': 'Indicateurs de objectifs spécifique',
            },
        ),
        migrations.CreateModel(
            name='IndicateurObjectifsGlobal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('resultat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projet.ObjectifGlobal')),
            ],
            options={
                'verbose_name_plural': 'Indicateurs de objectifs globaux',
            },
        ),
        migrations.CreateModel(
            name='Indicateurdeclinaison',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resultat_indic', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=200)),
                ('ciblle_2035', models.CharField(max_length=200)),
                ('unite', models.CharField(max_length=200)),
                ('quinquennat1', models.CharField(max_length=200)),
                ('quinquennat2', models.CharField(max_length=200)),
                ('quinquennat3', models.CharField(max_length=200)),
                ('quinquennat4', models.CharField(max_length=200)),
                ('resultat_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projet.Resultat')),
            ],
            options={
                'verbose_name_plural': 'declinaison indicateurs quinquenat',
            },
        ),
        migrations.CreateModel(
            name='financier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paiement', models.DecimalField(decimal_places=2, max_digits=5)),
                ('date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projet.Action')),
            ],
        ),
        migrations.CreateModel(
            name='ActionSig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volume', models.DecimalField(decimal_places=2, max_digits=5)),
                ('montant', models.DecimalField(decimal_places=2, max_digits=5)),
                ('source_financement', models.CharField(max_length=100)),
                ('duree', models.IntegerField()),
                ('ods', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('geom', django.contrib.gis.db.models.fields.GeometryCollectionField(srid=4326)),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projet.nomenclature')),
                ('projet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projet.Projet')),
            ],
        ),
        migrations.AddField(
            model_name='action',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projet.nomenclature'),
        ),
        migrations.AddField(
            model_name='action',
            name='projet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projet.Projet'),
        ),
        migrations.AddField(
            model_name='action',
            name='resultat',
            field=models.ManyToManyField(to='projet.Resultat'),
        ),
    ]
